require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

target 'vpp' do
  config = use_native_modules!

  use_react_native!(
    :path => config["reactNativePath"],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )
  pod 'linphone-sdk/basic-frameworks', '~> 4.4.4-alpha', :source => "https://gitlab.linphone.org/BC/public/podspec.git"
  pod 'SVProgressHUD'
  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral"
  pod 'Permission-Contacts', :path => "#{permissions_path}/Contacts"

  target 'vppTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true
  # use_flipper!()

#  post_install do |installer|
#    flipper_post_install(installer)
#  end
# use_flipper!({ 'Flipper' => '0.95.0' })
  
  # post_install do |installer|
  #   react_native_post_install(installer)
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  #   installer.aggregate_targets.each do |aggregate_target|
  #     aggregate_target.user_project.native_targets.each do |target|
  #       target.build_configurations.each do |config|
  #         config.build_settings['LIBRARY_SEARCH_PATHS'] = ['$(SDKROOT)/usr/lib/swift', '$(inherited)']
  #       end
  #     end
  #     aggregate_target.user_project.save
  #   end
  # end
end

target 'vpp-tvOS' do
  # Pods for vpp-tvOS

  target 'vpp-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end
